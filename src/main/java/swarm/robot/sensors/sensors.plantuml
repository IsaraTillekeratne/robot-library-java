@startuml

title __SENSORS's Class Diagram__\n

  namespace swarm {
    namespace robot {
      namespace sensors {
        abstract class swarm.robot.sensors.AbstractSensor {
            # robotId : int
            + AbstractSensor()
            + handleSubscription()
        }
      }
    }
  }
  

  namespace swarm {
    namespace robot {
      namespace sensors {
        class swarm.robot.sensors.ColorSensor {
            {static} - MQTT_TIMEOUT : int
            - col_lock : boolean
            - topicsSub : HashMap<mqttTopic, String>
            + ColorSensor()
            + getColor()
            + handleSubscription()
            + sendColor()
            - subscribe()
        }
      }
    }
  }
  

  namespace swarm {
    namespace robot {
      namespace sensors {
        enum mqttTopic {
          COLOR_IN
          COLOR_LOOK
        }
      }
    }
  }
  

  namespace swarm {
    namespace robot {
      namespace sensors {
        class swarm.robot.sensors.DistanceSensor {
            {static} - MQTT_TIMEOUT : int
            - dist_lock : boolean
            - dist_value : int
            - topicsSub : HashMap<mqttTopic, String>
            + DistanceSensor()
            + getDistance()
            + handleSubscription()
            + sendDistance()
            - subscribe()
        }
      }
    }
  }
  

  namespace swarm {
    namespace robot {
      namespace sensors {
        enum mqttTopic {
          DISTANCE_IN
          DISTANCE_LOOK
        }
      }
    }
  }
  

  namespace swarm {
    namespace robot {
      namespace sensors {
        class swarm.robot.sensors.ProximitySensor {
            {static} - MQTT_TIMEOUT : int
            - proximity_lock : boolean
            - topicsSub : HashMap<mqttTopic, String>
            + ProximitySensor()
            + getProximity()
            + handleSubscription()
            + sendProximity()
            - subscribe()
        }
      }
    }
  }
  

  namespace swarm {
    namespace robot {
      namespace sensors {
        enum mqttTopic {
          PROXIMITY_IN
        }
      }
    }
  }
  

  swarm.robot.sensors.AbstractSensor .up.|> swarm.Interfaces.IMqttHandler
  swarm.robot.sensors.AbstractSensor o-- swarm.robot.Robot : robot
  swarm.robot.sensors.AbstractSensor o-- swarm.mqtt.RobotMqttClient : robotMqttClient
  swarm.robot.sensors.ColorSensor -up-|> swarm.robot.sensors.AbstractSensor
  swarm.robot.sensors.ColorSensor o-- swarm.robot.types.RGBColorType : color
  swarm.robot.sensors.ColorSensor +-down- swarm.robot.sensors.ColorSensor.mqttTopic
  swarm.robot.sensors.DistanceSensor -up-|> swarm.robot.sensors.AbstractSensor
  swarm.robot.sensors.DistanceSensor +-down- swarm.robot.sensors.DistanceSensor.mqttTopic
  swarm.robot.sensors.ProximitySensor -up-|> swarm.robot.sensors.AbstractSensor
  swarm.robot.sensors.ProximitySensor o-- swarm.robot.types.ProximityReadingType : proximity
  swarm.robot.sensors.ProximitySensor +-down- swarm.robot.sensors.ProximitySensor.mqttTopic


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
